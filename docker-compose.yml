services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.local
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=5000
      - HOST=0.0.0.0
      - IS_DOCKER=true
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/musician_management
      # Additional env vars for PostgreSQL direct access
      - PGHOST=postgres
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGDATABASE=musician_management
      - PGPORT=5432
      # Enable automatic database migrations
      - RUN_MIGRATIONS=true
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    command: npm run dev

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=musician_management
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: